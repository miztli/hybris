apply plugin: 'installer-platform-plugin'
apply plugin: 'installer-addon2-plugin'

def pl = platform {
    localProperties {
        property 'baiduApiKey', ''
        property 'website.powertools.http', 'http://powertools.local:9001/yb2bacceleratorstorefront'
        property 'website.powertools.https', 'https://powertools.local:9002/yb2bacceleratorstorefront'
        property 'apiregistryservices.events.exporting', 'false'
    }

    extensions {
        extensionNames 'adaptivesearchsolr',
         'adaptivesearchbackoffice',
         'adaptivesearchwebservices',
         'adaptivesearchsamplesaddon',
         'b2bcommercebackoffice',
         'solrfacetsearchbackoffice',

         'yacceleratorbackoffice',
         'yacceleratorinitialdata',
         'yacceleratorfulfilmentprocess',
         'ycommercewebservices',
         'ycommercewebservicestest',
         'orderselfserviceaddon',

         'powertoolsstore',
         'solrserver',

         'acceleratorwebservicesaddon',
         'chineseaddressaddon',
         'chinesecommerceorgaddressaddon',
         'chineseaddressbackoffice',
         'b2bacceleratoraddon',
         'commerceorgaddon',
         'commerceorgsamplesaddon',

         'customersupportbackoffice',
         'customerticketingaddon',

         'rulebuilderbackoffice',
         'couponbackoffice',
         'droolsruleengineservices',
         'couponfacades',
         'couponservices',
         'promotionenginesamplesaddon',

         'textfieldconfiguratortemplatebackoffice',
         'textfieldconfiguratortemplateaddon',

         'cmswebservices',
         'smarteditwebservices',
         'cmssmarteditwebservices',
         'permissionswebservices',
         'smarteditaddon',
         'cmssmartedit',
         'cmsbackoffice',
         'assistedservicestorefront',
         'assistedservicewebservices',
         'cmsoccaddon',

         'previewpersonalizationweb',
         'personalizationcmsweb',
         'personalizationsmartedit',
         'personalizationpromotionssmartedit',
         'personalizationsampledataaddon',
         'personalizationpromotionssampledataaddon',
         'personalizationpromotions',
         'personalizationpromotionsweb',
         'personalizationservicesbackoffice',
         'personalizationpromotionsbackoffice',
         'personalizationcmsbackoffice',
         'personalizationsearchbackoffice',
         'personalizationsearchsmartedit',
         'personalizationsearchweb',
         'personalizationsearchsamplesaddon',

         'chinesestoreaddon',

         'consignmenttrackingaddon',
         'consignmenttrackingmock',
         'consignmenttrackingbackoffice',
         'consignmenttrackingoccaddon',

         'pcmbackofficesamplesaddon',

         'outboundservices',
         'odata2webservices',
         'odata2webservicesfeaturetests',

         'kymaintegrationbackoffice',
         'kymaintegrationsampledata',

         'yb2bacceleratorstorefront'

    }

    addons {
        forStoreFronts('yb2bacceleratorstorefront') {
            names "chineseaddressaddon,chinesecommerceorgaddressaddon,b2bacceleratoraddon,commerceorgaddon,chinesestoreaddon,commerceorgsamplesaddon,promotionenginesamplesaddon,textfieldconfiguratortemplateaddon,smarteditaddon,assistedservicestorefront,customerticketingaddon,orderselfserviceaddon,consignmenttrackingaddon,adaptivesearchsamplesaddon,personalizationsearchsamplesaddon,pcmbackofficesamplesaddon"
            template "yacceleratorstorefront"
            }
        forStoreFronts('ycommercewebservices') {
            names "acceleratorwebservicesaddon,consignmenttrackingoccaddon,cmsoccaddon"
            template "ycommercewebservices"
        }
    }

}

task createB2b {
     doLast {
        def prePlatform = platformFactory.createPlatform()
        prePlatform.createConfigDirIfNotExist()
        prePlatform.resetConfig()

        def yb2bDir = new File("${suiteHome}/hybris/bin/custom/yb2bacceleratorstorefront")
        if (yb2bDir.exists()) {
            yb2bDir.deleteDir()
        }

        pl.executeAntTarget 'extgen -Dhybris.target=extgen -Dinput.template=yacceleratorstorefront -Dinput.name=yb2bacceleratorstorefront -Dinput.package=de.hybris.platform.yb2bacceleratorstorefront'
    }
}

task setup(dependsOn: createB2b) {
    doLast {
        pl.setup()       
    }
}

task buildSystem(dependsOn: setup) {
    doLast {
        pl.build()
    }
}

task initialize(dependsOn: buildSystem) {
    doLast {
        pl.initialize()
    }
}

task start {
    doLast {
        pl.start()
    }
}
